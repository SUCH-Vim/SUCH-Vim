Before (setUp):
  let pip_module_install_command = "!pip install --target=".$HOME."/.SUCH-Vim/suchvim/dependencies/pip jedi"
  execute pip_module_install_command

  let modules = []
  call add(modules, "neovim")
  call add(modules, "pylint")
  call add(modules, "jedi")

  let not_installed_modules = []
  call add(not_installed_modules, "neovim")
  call add(not_installed_modules, "pylint")

  let installed_modules = []
  call add(installed_modules, "jedi")

After (Uninstalling everything from pip):
  let pip_uninstall_command = "!rm -rf ~/.SUCH-Vim/suchvim/dependencies/pip/*"
  execute pip_uninstall_command

Execute (Given installed pip modules when check dependencies then don't reinstall dependencies):
  source ~/.SUCH-Vim/suchvim/suchvim.vim
  let actual = SUCHVim_check_pip_module_dependencies(installed_modules)
  Assert [] == actual
    
Execute (Given not installed pip modules when check dependencies then install dependencies):
  source ~/.SUCH-Vim/suchvim/suchvim.vim
  call SUCHVim_check_pip_module_dependencies(not_installed_modules)
  let actual = SUCHVim_check_python_module_dependencies(not_installed_modules)
  Assert [] == actual

Execute (Given mixed installed pip modules when check dependencies then install dependencies):
  source ~/.SUCH-Vim/suchvim/suchvim.vim
  call SUCHVim_check_pip_module_dependencies(modules)

  let actual = SUCHVim_check_python_module_dependencies(modules)
  Assert [] == actual
